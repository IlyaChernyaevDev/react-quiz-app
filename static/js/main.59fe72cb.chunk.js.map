{"version":3,"sources":["components/Question/Question.js","components/QuestionProcessor/QuestionProcessor.js","hooks/useFetch.js","components/Form/Form.js","App.js","index.js"],"names":["Question","question","correct_answer","incorrect_answers","answerHandler","allAnswers","sort","style","display","flexDirection","margin","justifyContent","marginTop","marginBottom","lineHeight","textTransform","Grid","container","map","answer","item","xs","sm","Button","width","variant","value","onClick","e","currentTarget","uuidv4","QuestionProcessor","category","difficulty","setFormSubmit","setFormData","url","useState","loading","setLoading","questions","setQuestions","getQuestions","useCallback","a","fetch","response","json","fillterArray","replaceAllSpecialCharacters","results","array","Array","isArray","otherPropertis","decode","useEffect","useFetch","newUrl","updateUrl","gameOver","setGameOver","questionsCount","setQuestionsCount","correctAnswerCounter","setCorrectAnswerCounter","corrcetAnswer","length","Form","handleChange","event","propName","target","name","formData","FormControl","InputLabel","shrink","htmlFor","Select","native","onChange","App","formSumbit","ReactDOM","render","spacing","align","justify","backgroundColor","borderRadius","maxWidth","height","document","getElementById"],"mappings":"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","file":"static/js/main.59fe72cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Question = ({\r\n  question,\r\n  correct_answer,\r\n  incorrect_answers,\r\n  answerHandler,\r\n}) => {\r\n  const allAnswers = [correct_answer, ...incorrect_answers].sort();\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '2rem',\r\n        justifyContent: 'space-between',\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          marginTop: '0',\r\n          marginBottom: '2rem',\r\n          lineHeight: '1.5',\r\n          textTransform: 'none',\r\n        }}\r\n      >\r\n        {question}\r\n      </p>\r\n      <Grid container>\r\n        {allAnswers.map((answer) => {\r\n          return (\r\n            <Grid item xs={12} sm={6} key={uuidv4()}>\r\n              <Button\r\n                style={{ margin: '10px' }}\r\n                width='90%'\r\n                variant='outlined'\r\n                key={uuidv4()}\r\n                value={answer}\r\n                onClick={(e) => answerHandler(e.currentTarget.value)}\r\n              >\r\n                {answer}\r\n              </Button>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useState } from 'react';\r\nimport Question from '../Question/Question';\r\nimport { Button } from '@material-ui/core';\r\nimport { useFetch } from '../../hooks/useFetch';\r\n\r\nconst QuestionProcessor = ({category, difficulty, setFormSubmit, setFormData}) => {\r\n  const mainUrl = 'https://opentdb.com/api.php?amount=10';\r\n  const { loading, questions } = useFetch(updateUrl(mainUrl));\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [questionsCount, setQuestionsCount] = useState(0);\r\n  const [correctAnswerCounter, setCorrectAnswerCounter] = useState(0);\r\n\r\n  const answerHandler = (answer) => {\r\n    const corrcetAnswer = questions[questionsCount].correct_answer;\r\n    setQuestionsCount(questionsCount + 1);\r\n\r\n    if (answer === corrcetAnswer) {\r\n      setCorrectAnswerCounter(correctAnswerCounter + 1);\r\n    }\r\n    if (questionsCount >= questions.length - 1) {\r\n      setGameOver(true);\r\n    }\r\n  };\r\n\r\n  function updateUrl(url) {\r\n    let newUrl = url;\r\n    if(category !== '') {\r\n      newUrl += `&category=${category}`;\r\n    } \r\n    if(difficulty !== '') {\r\n      newUrl += `&difficulty=${difficulty}`;\r\n    }\r\n    return newUrl;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : gameOver ? (\r\n        <div>\r\n          <h2>Correct answers {correctAnswerCounter}/10</h2>\r\n          <Button\r\n            variant='outlined'\r\n            style={{ margin: '10px' }}\r\n            onClick={() => {\r\n              setFormSubmit(false);\r\n              setFormData({ category: '', difficulty: '' });\r\n            }}\r\n          >\r\n            play again\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        questions[questionsCount] &&\r\n        questions[questionsCount].incorrect_answers && (\r\n          <Question\r\n            {...questions[questionsCount]}\r\n            answerHandler={answerHandler}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionProcessor;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { decode } from 'html-entities';\r\n\r\nexport const useFetch = (url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const getQuestions = useCallback(async () => {\r\n    const response = await fetch(url);\r\n    const questions = await response.json();\r\n    const fillterArray = replaceAllSpecialCharacters(questions.results);\r\n    setQuestions(fillterArray);\r\n    setLoading(false);\r\n  }, [url]);\r\n\r\n  const replaceAllSpecialCharacters = (array) => {\r\n    if (Array.isArray(array)) {\r\n      return array.map(\r\n        ({\r\n          question,\r\n          correct_answer,\r\n          incorrect_answers,\r\n          ...otherPropertis\r\n        }) => {\r\n          return {\r\n            question: decode(question),\r\n            correct_answer: decode(correct_answer),\r\n            incorrect_answers: incorrect_answers.map((answer) => {\r\n              return decode(answer);\r\n            }),\r\n            ...otherPropertis,\r\n          };\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n  }, [url, getQuestions]);\r\n\r\n  return {loading, questions}\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Form = ({ setFormData, setFormSubmit }) => {\r\n  const handleChange = (event) => {\r\n    const propName = event.target.name;\r\n    const value = event.target.value;\r\n    setFormData((formData) => {\r\n      return {\r\n        ...formData,\r\n        [propName]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\r\n      <FormControl style={{ width: '90%', margin: '10px auto 10px auto' }}>\r\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\r\n          Select Category:\r\n        </InputLabel>\r\n        <Select name='category' native onChange={handleChange}>\r\n          <option value=''>Any Category</option>\r\n          <option value={9}>General Knowledge</option>\r\n          <option value={10}>Entertainment: Film</option>\r\n          <option value={11}>Entertainment: Music</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl style={{ width: '90%', margin: '10px auto 10px auto' }}>\r\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\r\n          Select Difficulty:\r\n        </InputLabel>\r\n        <Select name='difficulty' native onChange={handleChange}>\r\n          <option value=''>Any Difficulty</option>\r\n          <option value={'easy'}>Easy</option>\r\n          <option value={'medium'}>Medium</option>\r\n          <option value={'hard'}>Hard</option>\r\n        </Select>\r\n      </FormControl>\r\n      <Button\r\n        style={{ marginBottom: '10px' }}\r\n        onClick={() => setFormSubmit(true)}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport QuestionProcessor from './components/QuestionProcessor/QuestionProcessor';\nimport Form from './components/Form/Form';\n\nfunction App() {\n  const [formSumbit, setFormSubmit] = useState(false);\n  const [formData, setFormData] = useState({ category: '', difficulty: '' });\n\n  return (\n    <>\n      {formSumbit ? (\n        <QuestionProcessor\n          {...formData}\n          setFormSubmit={setFormSubmit}\n          setFormData={setFormData}\n        />\n      ) : (\n        <Form setFormData={setFormData} setFormSubmit={setFormSubmit} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Grid} from '@material-ui/core';\nimport './index.css';\n\nReactDOM.render(\n  <Grid container spacing={0} align='center' justify='center' style={{ backgroundColor: 'white',borderRadius: '15px', margin: 'auto', maxWidth: '650px', height: 'fit-content', width: '90%'}}>\n    <App />\n  </Grid>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}